<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <!--
    	See http://wiki.openmrs.org/display/docs/Module+liquibase+File for 
    	documentation on this file.
    
        See http://www.liquibase.org/manual/home#available_database_refactorings
        for a list of supported elements and attributes
    -->

    <changeSet id="20170330-1238" author="carapai" dbms="mysql">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="fingerprint"/>
            </not>
        </preConditions>
        <comment>
            Creating the fingerprint table
        </comment>
        <createTable tableName="fingerprint">
            <column name="fingerprint_id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="patient" type="char(38)">
                <constraints nullable="false"/>
            </column>
            <column name="finger" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="fingerprint" type="blob"/>

            <column name="date_created" type="DATETIME">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <!-- Transfer all fingerprints to new table-->

    <changeSet id="20170422-2228" author="carapai" dbms="mysql">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="fingerprint"/>
        </preConditions>
        <comment>
            Transfer all fingerprints from patient attribute table to the fingerprint table
        </comment>
        <sql>insert into fingerprint (patient, finger,fingerprint,date_created) select p.uuid,6,value,pp.date_created from person_attribute pp inner join person p on(pp.person_id = p.person_id) where pp.person_attribute_type_id = (select person_attribute_type_id from person_attribute_type where uuid = 'a41339f9-5014-45f4-91d6-bab84c6c62f1')</sql>
        <sql>delete from person_attribute where person_attribute_type_id = (select person_attribute_type_id from person_attribute_type where uuid = 'a41339f9-5014-45f4-91d6-bab84c6c62f1')</sql>
    </changeSet>
</databaseChangeLog>